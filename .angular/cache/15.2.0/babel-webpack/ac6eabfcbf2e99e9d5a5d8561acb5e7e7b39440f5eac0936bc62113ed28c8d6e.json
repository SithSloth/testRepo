{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"app/repository-service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nfunction EventComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"a\", 13)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const event_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(event_r2.name);\n  }\n}\nexport class EventComponent {\n  constructor(repositoryService) {\n    this.repositoryService = repositoryService;\n    this.eventID = \"\";\n    this.name = \"\";\n    this.description = \"\";\n    this.price = 0.00;\n    this.location = \"\";\n    this.date = \"2/27/2023\";\n  }\n  ngOnInit() {\n    this.repositoryService.getEvents().subscribe(response => {\n      this.events = response;\n    });\n  }\n  addEvent(form) {\n    let newEvent = {\n      eventID: -1,\n      name: form.form.value.name,\n      description: form.form.value.description,\n      date: form.form.value.date,\n      location: form.form.value.location,\n      price: form.form.value.price\n    };\n    this.repositoryService.addEvent(newEvent);\n  }\n}\nEventComponent.ɵfac = function EventComponent_Factory(t) {\n  return new (t || EventComponent)(i0.ɵɵdirectiveInject(i1.RepositoryService));\n};\nEventComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EventComponent,\n  selectors: [[\"app-event\"]],\n  decls: 29,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"newEventForm\", \"ngForm\"], [\"for\", \"name\"], [\"name\", \"name\", \"id\", \"name\", \"ngModel\", \"\"], [\"for\", \"description\"], [\"name\", \"description\", \"id\", \"description\", \"ngModel\", \"\"], [\"for\", \"date\"], [\"name\", \"date\", \"id\", \"date\", \"ngModel\", \"\"], [\"for\", \"location\"], [\"name\", \"location\", \"id\", \"location\", \"ngModel\", \"\"], [\"for\", \"price\"], [\"name\", \"price\", \"id\", \"price\", \"ngModel\", \"\"], [\"routerLink\", \"event-details/\"]],\n  template: function EventComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n      i0.ɵɵtext(2, \"Event List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, EventComponent_div_3_Template, 4, 1, \"div\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function EventComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r1 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.addEvent(_r1));\n      });\n      i0.ɵɵelementStart(6, \"p\")(7, \"label\", 3);\n      i0.ɵɵtext(8, \"Event Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\")(11, \"label\", 5);\n      i0.ɵɵtext(12, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"p\")(15, \"label\", 7);\n      i0.ɵɵtext(16, \"Date of Event:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"p\")(19, \"label\", 9);\n      i0.ɵɵtext(20, \"Location:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"p\")(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Price:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"p\")(27, \"button\");\n      i0.ɵɵtext(28, \"Add New Event\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.events);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;IAEEA,2BAAkC;IACKA,YAAc;IAAAA,iBAAK;;;;IAAnBA,eAAc;IAAdA,mCAAc;;;ACOvD,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,iBAAoC;IAApC,sBAAiB,GAAjBA,iBAAiB;IAErC,YAAO,GAAW,EAAE;IACpB,SAAI,GAAS,EAAE;IACf,gBAAW,GAAW,EAAE;IACxB,UAAK,GAAW,IAAI;IACpB,aAAQ,GAAW,EAAE;IACrB,SAAI,GAAW,WAAW;EAPkC;EAS5DC,QAAQ;IACN,IAAI,CAACD,iBAAiB,CAACE,SAAS,EAAE,CAACC,SAAS,CACzCC,QAAQ,IAAI;MACX,IAAI,CAACC,MAAM,GAAGD,QAAQ;IACxB,CAAC,CAAC;EAEN;EAEAE,QAAQ,CAACC,IAAW;IAClB,IAAIC,QAAQ,GAAY;MACtBC,OAAO,EAAE,CAAC,CAAC;MACXC,IAAI,EAAEH,IAAI,CAACA,IAAI,CAACI,KAAK,CAACD,IAAI;MAC1BE,WAAW,EAAGL,IAAI,CAACA,IAAI,CAACI,KAAK,CAACC,WAAW;MACzCC,IAAI,EAAEN,IAAI,CAACA,IAAI,CAACI,KAAK,CAACE,IAAI;MAC1BC,QAAQ,EAAEP,IAAI,CAACA,IAAI,CAACI,KAAK,CAACG,QAAQ;MAClCC,KAAK,EAAER,IAAI,CAACA,IAAI,CAACI,KAAK,CAACI;KACxB;IAED,IAAI,CAACf,iBAAiB,CAACM,QAAQ,CAACE,QAAQ,CAAC;EAE3C;;AAhCWV,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDV3BvB,2BAAK;MACCA,0BAAU;MAAAA,iBAAK;MACnBA,+DAGM;MACRA,iBAAM;MAIJA,kCAAiE;MAApCA;QAAAA;QAAA;QAAA,OAAYA,gCAAsB;MAAA,EAAC;MAC9DA,yBAAG;MAAkBA,2BAAW;MAAAA,iBAAQ;MAACA,2BAAuC;MAACA,iBAAI;MACrFA,0BAAG;MAA0BA,6BAAY;MAAAA,iBAAQ;MAACA,4BAAqD;MAAAA,iBAAI;MAC3GA,0BAAG;MAAmBA,+BAAc;MAAAA,iBAAQ;MAACA,4BAAuC;MAAAA,iBAAI;MACxFA,0BAAG;MAAuBA,0BAAS;MAAAA,iBAAQ;MAACA,6BAA+C;MAAAA,iBAAI;MAC/FA,0BAAG;MAAoBA,uBAAM;MAAAA,iBAAQ;MAACA,6BAAyC;MAAAA,iBAAI;MACnFA,0BAAG;MAAQA,8BAAa;MAAAA,iBAAS;;;MAdZA,eAAS;MAATA,oCAAS","names":["i0","EventComponent","constructor","repositoryService","ngOnInit","getEvents","subscribe","response","events","addEvent","form","newEvent","eventID","name","value","description","date","location","price","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\rizzo\\Desktop\\repos\\New folder\\UpmeetEventSystem\\src\\app\\event\\event.component.html","C:\\Users\\rizzo\\Desktop\\repos\\New folder\\UpmeetEventSystem\\src\\app\\event\\event.component.ts"],"sourcesContent":["<div>\n  <h3>Event List</h3>\n  <div *ngFor=\"let event of events\">\n      <a routerLink=\"event-details/\"><h3>{{event.name}}</h3></a>\n      \n  </div>\n</div>\n\n\n\n  <form #newEventForm=\"ngForm\" (ngSubmit)=\"addEvent(newEventForm)\">\n    <p><label for=\"name\">Event Name:</label> <input name=\"name\" id=\"name\" ngModel /> </p>\n    <p> <label for=\"description\">Description:</label> <input name=\"description\" id=\"description\" ngModel /></p>\n    <p> <label for=\"date\">Date of Event:</label> <input name=\"date\" id=\"date\" ngModel /></p>\n    <p> <label for=\"location\">Location:</label> <input name=\"location\" id=\"location\" ngModel /></p>\n    <p> <label for=\"price\">Price:</label> <input name=\"price\" id=\"price\" ngModel /></p>\n    <p><button>Add New Event</button></p>\n    </form>\n","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { IEvent } from 'app/interfaces/event';\nimport { RepositoryService } from 'app/repository-service';\n\n@Component({\n  selector: 'app-event',\n  templateUrl: './event.component.html',\n  styleUrls: ['./event.component.css']\n})\nexport class EventComponent {\n\n  \n  constructor(private repositoryService: RepositoryService) { }\n  events: any;\n  eventID: string = \"\";\n  name: string=\"\";\n  description: string = \"\";\n  price: number = 0.00;\n  location: string = \"\";\n  date: string = \"2/27/2023\"\n\n  ngOnInit(): void {\n    this.repositoryService.getEvents().subscribe(\n      (response) => {\n        this.events = response; \n      });\n    \n  };\n\n  addEvent(form:NgForm) {\n    let newEvent : IEvent = {\n      eventID: -1,\n      name: form.form.value.name,\n      description : form.form.value.description,\n      date: form.form.value.date,\n      location: form.form.value.location,\n      price: form.form.value.price\n    }\n    \n    this.repositoryService.addEvent(newEvent);\n\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}