{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RepositoryService {\n  constructor(http) {\n    this.http = http;\n    this.apiUri = 'https://localhost:7106/api/Event';\n  }\n  getEvents() {\n    return this.http.get(this.apiUri);\n  }\n  addEvent(event) {\n    return this.http.post(`${this.apiUri}/add`, event);\n  }\n  getEventDetails(index) {\n    let newUri = `${this.apiUri}/${index}`;\n    return this.http.get(newUri);\n  }\n}\nRepositoryService.ɵfac = function RepositoryService_Factory(t) {\n  return new (t || RepositoryService)(i0.ɵɵinject(i1.HttpClient));\n};\nRepositoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RepositoryService,\n  factory: RepositoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,iBAAiB;EAE5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAExB,WAAM,GAAW,kCAAkC;EAFX;EAIxCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,MAAM,CAAC;EACnC;EAEAC,QAAQ,CAACC,KAAY;IACnB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,MAAM,MAAM,EAACE,KAAK,CAAC;EACnD;EAEAE,eAAe,CAACC,KAAa;IAC3B,IAAIC,MAAM,GAAG,GAAG,IAAI,CAACN,MAAM,IAAIK,KAAK,EAAE;IACtC,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAASO,MAAM,CAAC;EACtC;;AAjBWX,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAY,SAAjBZ,iBAAiB;EAAAa,YAFhB;AAAM","names":["RepositoryService","constructor","http","getEvents","get","apiUri","addEvent","event","post","getEventDetails","index","newUri","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rizzo\\Desktop\\repos\\New folder\\UpmeetEventSystem\\src\\app\\repository-service.ts"],"sourcesContent":["import { IEvent } from \"./interfaces/event\";\r\nimport{HttpClient} from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RepositoryService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  apiUri: string = 'https://localhost:7106/api/Event'\r\n\r\n  getEvents(){\r\n    return this.http.get(this.apiUri)\r\n  }\r\n\r\n  addEvent(event:IEvent){\r\n    return this.http.post(`${this.apiUri}/add`,event);\r\n  }\r\n\r\n  getEventDetails(index: string){\r\n    let newUri = `${this.apiUri}/${index}`\r\n    return this.http.get<IEvent>(newUri)\r\n  }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}